// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name BanubaARCloudSDK
@_exported import BanubaARCloudSDK
import Foundation
import Swift
import SystemConfiguration
import UIKit
@objc public protocol AREffect {
  @objc var title: Swift.String { get }
  @objc var previewImage: Foundation.URL { get }
  @objc var downloadLink: Foundation.URL { get }
  @objc var isDownloaded: Swift.Bool { get }
  @objc var localURL: Foundation.URL? { get set }
}
public typealias DownloadEffectRequestId = Swift.UInt
extension UInt {
  public static var invalid: BanubaARCloudSDK.DownloadEffectRequestId {
    get
  }
}
@objc public class BanubaARCloud : ObjectiveC.NSObject {
  @objc public static var effectsFolderURL: Foundation.URL {
    @objc get
  }
  @objc required public init(uuidString: Swift.String)
  @objc public func getAREffects(completion: @escaping ([BanubaARCloudSDK.AREffect]?, Foundation.NSError?) -> Swift.Void)
  @objc public func getArEffectPreview(_ effect: BanubaARCloudSDK.AREffect, completion: @escaping (UIKit.UIImage?, Foundation.NSError?) -> Swift.Void)
  @discardableResult
  @objc public func downloadArEffect(_ effect: BanubaARCloudSDK.AREffect, downloadProgress: ((Swift.Double) -> Swift.Void)?, completion: @escaping (Foundation.URL?, Foundation.NSError?) -> Swift.Void) -> BanubaARCloudSDK.DownloadEffectRequestId
  @objc public func cancelDownloadingEffect(withRequestId requestId: BanubaARCloudSDK.DownloadEffectRequestId)
  @objc public static func application(_ application: UIKit.UIApplication, handleEventsForBackgroundURLSession identifier: Swift.String, completionHandler: @escaping () -> Swift.Void)
  @objc deinit
  @objc override dynamic public init()
}
